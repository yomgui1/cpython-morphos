#define single_input 256
#define file_input 257
#define eval_input 258
#define decorator 259
#define decorators 260
#define funcdef 261
#define parameters 262
#define typedargslist 263
#define tname 264
#define tfpdef 265
#define tfplist 266
#define varargslist 267
#define vname 268
#define vfpdef 269
#define vfplist 270
#define stmt 271
#define simple_stmt 272
#define small_stmt 273
#define expr_stmt 274
#define augassign 275
#define del_stmt 276
#define pass_stmt 277
#define flow_stmt 278
#define break_stmt 279
#define continue_stmt 280
#define return_stmt 281
#define yield_stmt 282
#define raise_stmt 283
#define import_stmt 284
#define import_name 285
#define import_from 286
#define import_as_name 287
#define dotted_as_name 288
#define import_as_names 289
#define dotted_as_names 290
#define dotted_name 291
#define global_stmt 292
#define assert_stmt 293
#define compound_stmt 294
#define if_stmt 295
#define while_stmt 296
#define for_stmt 297
#define try_stmt 298
#define with_stmt 299
#define with_var 300
#define except_clause 301
#define suite 302
#define testlist_safe 303
#define old_test 304
#define old_lambdef 305
#define test 306
#define or_test 307
#define and_test 308
#define not_test 309
#define comparison 310
#define comp_op 311
#define expr 312
#define xor_expr 313
#define and_expr 314
#define shift_expr 315
#define arith_expr 316
#define term 317
#define factor 318
#define power 319
#define atom 320
#define listmaker 321
#define testlist_gexp 322
#define lambdef 323
#define trailer 324
#define subscriptlist 325
#define subscript 326
#define sliceop 327
#define exprlist 328
#define testlist 329
#define dictsetmaker 330
#define classdef 331
#define arglist 332
#define argument 333
#define list_iter 334
#define list_for 335
#define list_if 336
#define gen_iter 337
#define gen_for 338
#define gen_if 339
#define testlist1 340
#define encoding_decl 341
#define yield_expr 342
